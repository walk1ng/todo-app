name: Run Unit Test via Pytest

on:
  push:
    branches:
      - main
    paths:
      - "py/**"
  pull_request:
    branches:
      - main
    paths:
      - "py/**"
  workflow_dispatch:
    inputs:
      PR_number:
        description: "The PR number"
        required: true

defaults:
  run:
    shell: bash
    working-directory: py/

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py310 .
        continue-on-error: true

      - name: Test with pytest
        run: |
          coverage run -m pytest  -v -s

      - name: Generate Coverage Report
        id: cov_report
        run: |
          coverage report -m | tee report.txt
          DETAILS=$(cat report.txt)
          echo '<-------------------------------------->'
          echo $DETAILS
          echo '<-------------------------------------->'
          echo "report=today is a good day" >> $GITHUB_ENV
          echo "other=tomorrow is also a good day" >> $GITHUB_OUTPUT
          # echo "content=$DETAILS" >> $GITHUB_OUTPUT

      - name: Generate Coverage xml Report
        run: |
          coverage xml

      - name: Upload coverage.xml as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: py/coverage.xml

      - name: Get coverage percentage
        id: coverage
        run: |
          COVERAGE=$(coverage report | tail -n 1 | awk '{print $4}' | sed 's/%//')
          echo "coverage=$COVERAGE" >> $GITHUB_ENV

      - name: Comment on Pull Request with coverage
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ github.event.inputs.PR_number }}
          header: Test Coverage Report
          message: |
            The current test coverage is **${{ env.coverage }}%**.

      - name: Comment on Pull Request with report details
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Test Coverage Report
          number: ${{ github.event.inputs.PR_number }}
          path: report.txt
