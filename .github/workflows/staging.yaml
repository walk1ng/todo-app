name: Create the dev staging environment

on:
  workflow_dispatch:
    inputs:
      PR_number:
        description: "The PR number"
        required: true

defaults:
  run:
    shell: bash
    working-directory: infra

jobs:
  create:
    name: "Create staging and deploy"
    runs-on: ubuntu-latest
    steps:
      - name: Verify the PR number
        uses: actions/github-script@v5
        id: verify_pr_number
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |

            try {
              // call the api
              const response = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ github.event.inputs.PR_number }}
              });

              // check if the PR is valid and open
              if (response.status !== 200) {
                console.log('this is a http code ranther than 200');
                throw new Error(`Failed to get PR ${{ github.event.inputs.PR_number }}.`);
              } else if (response.data.state !== "open") {
                throw new Error(`PR ${{ github.event.inputs.PR_number }} is not open.`);
              } else if (response.data.number !== ${{ github.event.inputs.PR_number }}) {
                throw new Error(`PR ${{ github.event.inputs.PR_number }} is not valid.`);
              } else {
                console.log("PR ref: " + response.data.head.ref);
                return response.data.head.ref;
              }
            } catch (error) {
              console.log("Error: " + error);
            }

      - name: Use github script
        uses: actions/github-script@v5
        id: hello_github_script
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const output = `
              this comment comes from github script.\n
              owner: ${context.repo.owner}\n
              repo: ${context.repo.repo}\n
              > PR: #${{ github.event.inputs.PR_number }}
            `
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.PR_number }},
              body: output
            });
